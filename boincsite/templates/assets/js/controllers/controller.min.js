function getQueryStrings(){var a={},b=function(a){return decodeURIComponent(a.replace(/\+/g," "))},c=location.search.substring(1),d=c.split("&");for(var e in d){var f=d[e].split("=");f.length>1&&(a[b(f[0])]=b(f[1]))}return a}function DiskUsageController(a){var b=this;a.get("/disk_usage_json").success(function(a){b.disk_usages=a,b.ready=!0}),b.orderProp="master_url",b.reverseSort=!1,b.ready=!1,b.title="Disk Usage"}function IndexController(a){var b=this;a.get("/tasks_json").success(function(c){a.get("/projects_json").success(function(a){b.projects=a,b.tasks=c;for(var d=0;d<c.length;d++)c[d].idx=d+1,c[d].project_name=get_project_name(c[d],b.projects),c[d].state=get_state_string(c[d]),c[d].time_so_far=get_time_so_far(c[d]);b.ready=!0,b.showRawData=!1,b.title="BOINC Tasks"})}),b.sortProp="index",b.reverseSort=!1,b.ready=!1}function TaskController(a,b){var c=this;a.get("/task_json?task_name="+b.task_name).then(function(b){var d=b.data;a.get("/projects_json").then(function(a){var b=a.data;d.project_name=get_project_name(d,b),d.state=get_state_string(d),d.time_so_far=get_time_so_far(d),c.task=d,c.suspend_button_text=d.suspended_via_gui?"Resume":"Suspend",c.ready=!0})},function(a){c.error=!0,500===a.status&&(c.errorMessage="Task not found."),c.ready=!0}),c.ready=!1,c.title="Task Summary"}function ProjectsController(a){var b=this;a.get("/projects_json").success(function(a){b.projects=a,b.ready=!0}),b.orderProp="name",b.reverseSort=!1,b.ready=!1,b.showRawData=!1,b.title="BOINC Projects"}function ProjectController(a,b){var c=this,d=b.project;a.get("/project_json?project="+d).then(function(a){c.project=a.data,c.ready=!0},function(a){c.error=!0,c.errorMessage="Project not found.",c.ready=!0}),c.ready=!1,c.title="Project Summary"}function HostInfoController(a){vm=this,a.get("/host_info_json").success(function(a){vm.host_info=a,vm.ready=!0}),vm.ready=!1,vm.title="Host Info"}function DailyTransferController(a){var b=this;a.get("/daily_transfer_history_json").success(function(a){for(var c in a){var d=a[c],e=d.date.split("-"),f=new Date(e[0],e[1]-1,e[2]);a[c].date=f}var g=function(b){var c=Array.map(a,function(a){return a[b]}),d=Array.reduce(c,function(a,b){return a+b});return Math.round(100*d)/100};b.daily_transfers=a,b.orderProp="date",b.reverseSort=!0,b.totalUploaded=g("uploaded")+"MB",b.totalDownloaded=g("downloaded")+"MB",b.ready=!0,b.title="Daily Transfer History"}),b.ready=!1}function MessagesController(a){var b=this;a.get("/messages_json").success(function(a){b.messages=a;var c=Array.map(a,function(a){return a.project_name});b.unique_project_names=Array.filter(c,function(a,b,c){return b==c.indexOf(a)});var d=function(a){var b=Array.filter(c,function(b){return b==a});return b.length},e=new Object;for(upn in b.unique_project_names){var f=b.unique_project_names[upn];e[f]=d(f)}b.project_name_counts=e,b.ready=!0}),b.get_project_name=function(a){return""===a?"(no project)":a},b.orderProp="message_number",b.reverseSort=!0,b.filterProp="",b.ready=!1,b.title="Messages"}var zoetropeControllers=angular.module("zoetropeControllers",["ngRoute"]),get_project_name=function(a,b){for(p in b){var c=b[p];if(c.master_url==a.project_url)return c.name}return""},get_time_so_far=function(a){return a.ready_to_report?a.final_cpu_time:a.current_cpu_time},get_state_string=function(a){if(a.suspended_via_gui)return"Task suspended by user";if(2===a.state&&(1===a.scheduler_state||0===a.active_task_state))return"Waiting to run";switch(a.state){case 2:return"Running";case 3:return"Computation error";case 5:return"Ready to report";case 6:default:return a.state}};zoetropeControllers.directive("keyvalrow",function(){return{restrict:"E",scope:{key:"@",val:"@"},templateUrl:"/static/directives/keyvalrow.html"}}),angular.module("zoetropeControllers").controller("DiskUsageCtrl",DiskUsageController),DiskUsageController.$inject=["$http"],angular.module("zoetropeControllers").controller("IndexCtrl",IndexController),IndexController.$inject=["$http"],angular.module("zoetropeControllers").controller("TaskCtrl",TaskController),TaskController.$inject=["$http","$routeParams"],angular.module("zoetropeControllers").controller("ProjectsCtrl",ProjectsController),ProjectsController.$inject=["$http"],angular.module("zoetropeControllers").controller("ProjectCtrl",ProjectController),ProjectController.$inject=["$http","$routeParams"],angular.module("zoetropeControllers").controller("HostInfoCtrl",HostInfoController),zoetropeControllers.controller("HostInfoCtrl",HostInfoController),HostInfoController.$inject=["$http"],angular.module("zoetropeControllers").controller("DailyTransferCtrl",DailyTransferController),DailyTransferController.$inject=["$http"],angular.module("zoetropeControllers").controller("MessagesCtrl",MessagesController),MessagesController.$inject=["$http"];
//# sourceMappingURL=controller.js.map